/// Tipos de perecibilidad de los productos
enum TipoPerecibilidad {
  /// Productos altamente perecederos (2 d√≠as de alerta)
  perecedero,
  
  /// Productos medianamente perecederos (5 d√≠as de alerta)
  semiPerecedero,
  
  /// Productos poco perecederos (15 d√≠as de alerta)
  pocoPerecedero,
  
  /// Productos no perecederos (90 d√≠as de alerta)
  noPerecedero,
}

/// Estados posibles de una existencia
enum EstadoExistencia {
  /// Existencia disponible para consumo
  disponible,
  
  /// Existencia ya consumida (archivada)
  consumida,
  
  /// Existencia caducada
  caducada,
}

/// Tipos de notificaciones del sistema
enum TipoNotificacion {
  /// Notificaci√≥n cr√≠tica para productos pr√≥ximos a caducar (2 d√≠as o menos)
  critica,
  
  /// Notificaci√≥n de advertencia para productos pr√≥ximos a caducar (5 d√≠as o menos)
  advertencia,
  
  /// Notificaci√≥n de precauci√≥n para productos pr√≥ximos a caducar (15 d√≠as o menos)
  precaucion,
  
  /// Notificaci√≥n informativa
  informativa,
  
  /// Notificaci√≥n de producto caducado
  caducado,
  
  /// Notificaci√≥n de sugerencia de compras
  sugerenciaCompras,
}

/// Extensiones para TipoPerecibilidad
extension TipoPerecibilidadExtension on TipoPerecibilidad {
  /// Nombre legible del tipo de perecibilidad
  String get nombre {
    switch (this) {
      case TipoPerecibilidad.perecedero:
        return 'Altamente Perecedero';
      case TipoPerecibilidad.semiPerecedero:
        return 'Medianamente Perecedero';
      case TipoPerecibilidad.pocoPerecedero:
        return 'Poco Perecedero';
      case TipoPerecibilidad.noPerecedero:
        return 'No Perecedero';
    }
  }

  /// D√≠as de alerta antes de la caducidad
  int get diasAlerta {
    switch (this) {
      case TipoPerecibilidad.perecedero:
        return 2;
      case TipoPerecibilidad.semiPerecedero:
        return 5;
      case TipoPerecibilidad.pocoPerecedero:
        return 15;
      case TipoPerecibilidad.noPerecedero:
        return 90;
    }
  }

  /// Color sugerido para la UI
  String get colorHex {
    switch (this) {
      case TipoPerecibilidad.perecedero:
        return '#FF5252'; // Rojo
      case TipoPerecibilidad.semiPerecedero:
        return '#FF9800'; // Naranja
      case TipoPerecibilidad.pocoPerecedero:
        return '#FFC107'; // Amarillo
      case TipoPerecibilidad.noPerecedero:
        return '#4CAF50'; // Verde
    }
  }
}

/// Extensiones para EstadoExistencia
extension EstadoExistenciaExtension on EstadoExistencia {
  /// Nombre legible del estado
  String get nombre {
    switch (this) {
      case EstadoExistencia.disponible:
        return 'Disponible';
      case EstadoExistencia.consumida:
        return 'Consumida';
      case EstadoExistencia.caducada:
        return 'Caducada';
    }
  }

  /// Icono sugerido para el estado
  String get icono {
    switch (this) {
      case EstadoExistencia.disponible:
        return '‚úÖ';
      case EstadoExistencia.consumida:
        return 'üçΩÔ∏è';
      case EstadoExistencia.caducada:
        return '‚ùå';
    }
  }
}

/// Extensiones para TipoNotificacion
extension TipoNotificacionExtension on TipoNotificacion {
  /// Nombre legible del tipo de notificaci√≥n
  String get nombre {
    switch (this) {
      case TipoNotificacion.critica:
        return 'Cr√≠tica';
      case TipoNotificacion.advertencia:
        return 'Advertencia';
      case TipoNotificacion.precaucion:
        return 'Precauci√≥n';
      case TipoNotificacion.informativa:
        return 'Informativa';
      case TipoNotificacion.caducado:
        return 'Producto Caducado';
      case TipoNotificacion.sugerenciaCompras:
        return 'Sugerencia de Compras';
    }
  }

  /// Prioridad de la notificaci√≥n (1 = m√°s alta, 5 = m√°s baja)
  int get prioridad {
    switch (this) {
      case TipoNotificacion.critica:
        return 1;
      case TipoNotificacion.caducado:
        return 1;
      case TipoNotificacion.advertencia:
        return 2;
      case TipoNotificacion.precaucion:
        return 3;
      case TipoNotificacion.sugerenciaCompras:
        return 4;
      case TipoNotificacion.informativa:
        return 5;
    }
  }
}